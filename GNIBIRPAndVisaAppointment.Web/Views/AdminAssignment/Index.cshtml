@using GNIBIRPAndVisaAppointment.Web.Business.Application
@using GNIBIRPAndVisaAppointment.Web.DataAccess.Model.Storage
@{
    Layout = "_AdminLayout";
    var status = ViewBag.Status;
    var assignments = ViewBag.Assignments;
    var payments = ViewBag.Payments;
    var isPaids = ViewBag.IsPaids;
    var letters = (Dictionary<string, AppointmentLetter[]>)ViewBag.AppointmentLetters;

    string formAction = null;
    switch (status)
    {
        case "Pending":
            formAction = "Accepts";
            break;
        case "Appointed":
            formAction = "Completes";
            break;
    }
}

<form method="POST" action="@formAction">
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <nav>
                    <div class="nav nav-tabs assignment-nav">
                        <a class="nav-item nav-link pending" href="/Admin/Assignment/Pending">Pending</a>
                        <a class="nav-item nav-link accepted" href="/Admin/Assignment/Accepted">Accepted</a>
                        <a class="nav-item nav-link appointed" href="/Admin/Assignment/Appointed">Appointed</a>
                        <a class="nav-item nav-link duplicated" href="/Admin/Assignment/Duplicated">Duplicated</a>
                        <!-- <a class="nav-item nav-link unverify" href="/Admin/Assignment/Unverify">Unverify</a> -->
                        <a class="nav-item nav-link complete" href="/Admin/Assignment/Complete">Complete</a>
                        <a class="nav-item nav-link cancelled" href="/Admin/Assignment/Cancelled">Cancelled</a>
                        <a class="nav-item nav-link rejected" href="/Admin/Assignment/Rejected">Rejected</a>
                        <a class="nav-item nav-link closed" href="/Admin/Assignment/Closed">Closed</a>
                    </li>
                </nav>
            </tr>
            <tr class="table-secondary">
                @if (status == "Pending" || status == "Appointed")
                {
                    <th>
                        <input class="select-all" type="checkbox" />
                    </th>
                }
                <th>Person (@assignments.Count)</th>
                <th>Category</th>
                <th>Target</th>
                <th>Time</th>
                <th>Status</th>
                @if (status == "Complete")
                {
                    <th>Appointment</th>
                }
                <th>Payment</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var assignment in assignments)
            {
                <tr @(status != "Closed" && (assignment.AppointmentLetter?.Time.Date ?? DateTime.MaxValue) <= DateTime.Now ? "class=table-danger" : string.Empty)>
                    @if (status == "Pending")
                    {
                        <th>
                            <input class='select-id' name="ids" type="checkbox" value="@assignment.Id" />
                        </th>
                    }
                    else if (status == "Appointed")
                    {
                        <th>
                            @{
                                var assignmentLetters = letters[assignment.Id];
                                @foreach (var letter in assignmentLetters)
                                {
                                    <input class='select-id' name="letters" type="checkbox" value="@assignment.Id|@(letter.RowKey)" />
                                    @letter.Time.ToString("dd-MMM-yyyy")
                                }
                            }
                        </th>
                    }
                    <td>
                        <a target="_blank" href="/Application/Status/@assignment.Id">
                            @assignment.Application.GivenName @assignment.Application.SurName
                        </a>
                    </td>
                    <td>
                        @if (assignment.Order.Emergency != 0)
                        {
                            <span class="badge badge-danger badge-sm">EMERGENCY</span>
                            <br />
                        }
                        @if (assignment.Application.ConfirmGNIB == "Renewal")
                        {
                            <span class="badge badge-primary badge-sm">@assignment.Application.ConfirmGNIB</span>
                        }
                        else
                        {
                            <span class="badge badge-success badge-sm">@assignment.Application.ConfirmGNIB</span>
                        }
                    </td>
                    <td>
                        @assignment.Order.From ~ @assignment.Order.To
                    </td>
                    <td>@assignment.Time</td>
                    <td>
                        @Html.Partial("~/Views/Application/StatusPartial.cshtml", assignment.Status as string)
                    </td>
                    <td>
                        @if (assignment.AppointmentLetter != null)
                        {
                            <a target="_blank" href="/Application/Appointment/@assignment.Id">@assignment.AppointmentLetter.AppointmentNo</a>
                            <br />
                            @assignment.AppointmentLetter.Time.ToString("MM-dd HH:mm")
                        }
                    </td>
                    @if (status == "Complete")
                    {
                        <td>
                            @{
                                var paymentList = payments[assignment.Id];
                                if (paymentList == null || paymentList.Count == 0)
                                {
                                    <span class="badge badge-danger">Unpaid</span>
                                }
                                else
                                {
                                    foreach (var payment in paymentList)
                                    {
                                        <span class="badge badge-success">@payment.Type</span>
                                        @switch(payment.Currency)
                                        {
                                            case "cny":
                                                <span>¥</span>
                                                break;
                                            case "eur":
                                                <span>€</span>
                                                break;
                                            case "usd":
                                                <span>$</span>
                                                break;
                                        }
                                        <span>@payment.Amount</span>
                                        <br />
                                    }
                                }
                            }
                        </td>
                    }
                    <td>
                        @Html.Partial("OperationButtonsPartial", new ViewDataDictionary(new Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider(), new Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary())
                        {
                            { "Id", assignment.Id },
                            { "Status", assignment.Status },
                            { "IsPaid", isPaids[assignment.Id] },
                        })
                    </td>
                </tr>
                <tr>
                    <td colspan="8">
                        @assignment.Application.Comment
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <hr>

    @switch (status)
    {
        case "Pending":
            <button type="submit" class="btn btn-info">Accept</button>
            break;
        case "Appointed":
            <button type="submit" class="btn btn-success">Complete</button>
            break;
    }
</form>

@section scripts
{
    <script type="text/javascript">
        $('.assignment-nav .@status.ToLower()').addClass('active');

        $('.select-all').change(function () {
            $('form table tbody tr').each(function () {
                $(this).find('.select-id').last().prop('checked', $('.select-all').prop('checked'));
            })
        });
    </script>
}