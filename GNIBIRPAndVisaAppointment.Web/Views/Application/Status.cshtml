@using GNIBIRPAndVisaAppointment.Web.Business.Application

@{
    var assignment = ViewBag.Assignment;
    var order = ViewBag.Order;
    var application = ViewBag.Application;
    var payments = ViewBag.Payments;
    var isPaid = ViewBag.isPaid;
    var AppointmentLetter = ViewBag.AppointmentLetter;
    
    ViewData["Title"] = $"{application.GivenName} {application.SurName} - ";
}

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item">Apply</li>
    <li class="breadcrumb-item">Order</li>
    <li class="breadcrumb-item">Checkout</li>
    <li class="breadcrumb-item"><a target="_self" href="#">Status</a></li>
    <li class="breadcrumb-item">Print</li>
  </ol>
</nav>

<h4>Application</h4>
<table class="table table-sm table-striped">
    <tr>
        <th>Person</th>
        <td>
            <div class="input-group">
                <span class="input-group-text">@application.Salutation</span>
                <input type="text" class="form-control" value="@application.GivenName" readonly>
                @if (!string.IsNullOrEmpty(application.MidName))
                {
                    <input type="text" class="form-control" value="@application.MidName" readonly>
                }
                <input type="text" class="form-control" value="@application.SurName" readonly>
            </div>
            <div class="input-group">
                <input type="text" class="form-control" value="@application.DOB" readonly>
            </div>
            <div class="input-group">
                <input type="text" class="form-control" value="@application.Nationality" readonly>
                <input type="text" class="form-control" value="@(application.PPNoYN == "Yes" ? application.PPNo : application.PPReason)" readonly>
            </div>
            <div class="input-group">
                <input type="text" class="form-control" value="@(application.FamAppYN == "Yes" ? $"* {application.FamAppNo} person(s)" : "Individual")" readonly>
            </div>
        </td>
    </tr>
    <tr>
        <th>Category</th>
        <td>@application.Category - @application.SubCategory</td>
    </tr>
    <tr>
        <th>GNIB / IRP Status</th>
        <td>
            <div class="input-group">
                @if (application.ConfirmGNIB == "Renewal")
                {
                    <input type="text" class="form-control" value="@application.GNIBNo" readonly>
                    <input type="text" class="form-control" value="@application.GNIBExDT" readonly>
                }
                else
                {
                    <input type="text" class="form-control" value="This application has no GNIB number." readonly>
                }
                <a href="/Application/ChangeGNIB/@application.Id" class="btn btn-info">Change GNIB</a>
            </div>
        </td>
    </tr>
    <tr>
        <th>Contact</th>
        <td>
            <div class="input-group">
                <input type="text" class="form-control" value="@application.Email" readonly>
            </div>
        </td>
    </tr>
    <tr>
        <th>Comment</th>
        <td>
            <div class="alert alert-info">
                @application.Comment
            </div>
        </td>
    </tr>
</table>

<hr class="my-4">

<h4>Order</h4>
<table class="table table-sm table-striped">
    <tr>
        <th>Basic</th>
        <td>
            € @order.Base
            -
            Appointment Service
        </td>
    </tr>
    <tr>
        <th>Date Picked</th>
        <td>
            @if (order.PickDate > 0)
            {
                <span>
                    € @order.PickDate
                    -
                    Date Picked
                    , FROM
                    @(order.From ?? "now")
                    TO
                    @order.To
                </span>
            }
            else
            {
                <span>No date picked</span>
            }
        </td>
    </tr>
    <tr>
        <th>Emergency</th>
        <td>
            @if (order.Emergency > 0)
            {
                <span class="text-warning">€ @order.Emergency</span>
            }
            else
            {
                <span>Not Emergency</span>
            }
        </td>
    </tr>
    @if (order.Special != 0)
    {
        <tr>
            <th>Special</th>
            <td>
                € @order.Special
            </td>
        </tr>
    }
    <tr>
        <th>Comment</th>
        <td>@order.Comment</td>
    </tr>
    @if (assignment.Status == AssignmentStatus.Pending)
    {
        <tr>
            <th></th>
            <td>
                <a class="btn btn-info" target="_self" href="/Application/Order/@assignment.Id">Change</a>
            </td>
        </tr>
    }
</table>

<hr class="my-4">

<h4>Assignment</h4>
<table class="table table-sm table-striped">
    <tr>
        <th>Submitted Time</th>
        <td>
            @assignment.Time.ToString("dd MMM yyyy HH:mm:ss")
        </td>
    </tr>
    <tr>
        <th>Status</th>
        <td>
            @Html.Partial("StatusPartial", assignment.Status as string)
        </td>
    </tr>
    <tr>
        <th></th>
        <td>
            @switch (assignment.Status)
            {
                case AssignmentStatus.Pending:
                    <div class="alert alert-info">
                        Your application is submitted.
                    </div>
                    break;
                case AssignmentStatus.Accepted:
                    <div class="alert alert-primary">
                        I'm working on your application and looking for an appointment for you.
                    </div>
                    break;
                case AssignmentStatus.Appointed:
                    <div class="alert alert-warning">
                        Waiting for the application e-mail.
                    </div>
                    break;
                case AssignmentStatus.Duplicated:
                    <div class="alert alert-danger">
                        You already have an appointment. I failed to book you another.
                        <br />
                        If you want to make a new appointment, you need to cancel the old one.
                    </div>
                    break;
                case AssignmentStatus.Complete:
                    if (!isPaid)
                    {
                        <div class="alert alert-warning">
                            Your appointment is booked and uploaded. Please pay to download.
                        </div>
                    }
                    break;
            }
        </td>
    </tr>
</table>

<hr class="my-4">

<h4>Payment</h4>
<table class="table table-sm table-striped">
    <tr>
        <th>Payment</th>
        <td>
            @foreach (var payment in payments)
            {
                <span>
                    @if (payment.Status == null || payment.Status == "paid") {
                        <span class="badge badge-success">success</span>
                    } else {
                        <span class="badge badge-secondary">failed</span>
                    }
                    @payment.Time.ToString("yyyy-MM-dd HH:mm:ss")
                    |
                    @payment.Type:
                    @payment.Amount
                    @payment.Currency.ToUpper()
                </span>
                <br />
            }
        </td>
    </tr>
    <tr>
        <th></th>
        <td>
            @if (!isPaid)
            {
                if (assignment.Status == AssignmentStatus.Complete || assignment.Status == AssignmentStatus.Closed)
                {
                    <a class="btn btn-primary" target="_self" href="/Application/Checkout/@order.Id">Pay to Download Appointment Letter</a>
                }
                else
                {
                    <a class="btn btn-primary" target="_self" href="/Application/Checkout/@order.Id">Prepay</a>
                }
                <br />
            }
        </td>
    </tr>
    <tr>
        <th></th>
        <td>
            @if (isPaid && (assignment.Status == AssignmentStatus.Complete || assignment.Status == AssignmentStatus.Closed))
            {
                @* <a class="btn btn-success" target="_blank" href="/Application/Appointment/@order.Id">View Appointment Letter</a> *@
                <div class="alert alert-success">The appointment letter has been sent to your application e-mail address.</div>
            }
        </td>
    </tr>
    <tr>
        <th></th>
        <td>
            @await Html.PartialAsync("../AdminAssignment/AdminToolPartial.cshtml", new ViewDataDictionary(new Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider(), new Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary())
            {
                { "Id", assignment.Id },
                { "Status", assignment.Status },
                { "IsPaid", isPaid },
                { "ReturnUrl", "/Application/Status/" + assignment.Id }
            })
        </td>
    </tr>
</table>